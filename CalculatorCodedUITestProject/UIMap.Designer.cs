// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 15.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CalculatorCodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Standart - Используйте "StandartParams" для передачи параметров в этот метод.
        /// </summary>
        public void Standart()
        {
            #region Variable Declarations
            WinEdit uITextBoxOp1Edit = this.UIForm1Window.UITextBoxOp1Window.UITextBoxOp1Edit;
            WinEdit uITextBoxOp2Edit = this.UIForm1Window.UITextBoxOp2Window.UITextBoxOp2Edit;
            WinButton uIItemButton = this.UIForm1Window.UIItemWindow1.UIItemButton;
            #endregion

            // Тип "2" в "textBoxOp1" надпись
            uITextBoxOp1Edit.Text = this.StandartParams.UITextBoxOp1EditText;

            // Тип "3" в "textBoxOp2" надпись
            uITextBoxOp2Edit.Text = this.StandartParams.UITextBoxOp2EditText;

            // Тип "{Tab}" в "textBoxOp2" надпись
            Keyboard.SendKeys(uITextBoxOp2Edit, this.StandartParams.UITextBoxOp2EditSendKeys, ModifierKeys.None);

            // Тип "{Enter}" в "/" кнопка
            Keyboard.SendKeys(uIItemButton, this.StandartParams.UIItemButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// AssertMethod1 - Используйте "AssertMethod1ExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinWindow uIItem5Window = this.UIForm1Window.UIForm1Client.UIItem5Window;
            #endregion

            // Убедитесь, что свойство Name "5" окно равняется "5"
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIItem5WindowName, uIItem5Window.Name, "Неверный вывод результата");
        }
        
        /// <summary>
        /// LettersInput - Используйте "LettersInputParams" для передачи параметров в этот метод.
        /// </summary>
        public void LettersInput()
        {
            #region Variable Declarations
            WinClient uIForm1Client = this.UIForm1Window.UIForm1Client;
            WinEdit uITextBoxOp1Edit = this.UIForm1Window.UITextBoxOp1Window.UITextBoxOp1Edit;
            WinEdit uITextBoxOp2Edit = this.UIForm1Window.UITextBoxOp2Window.UITextBoxOp2Edit;
            WinButton uIItemButton = this.UIForm1Window.UIItemWindow1.UIItemButton;
            #endregion

            // Щелкните "Form1" клиент
            Mouse.Click(uIForm1Client, new Point(147, 55));

            // Тип "a" в "textBoxOp1" надпись
            uITextBoxOp1Edit.Text = this.LettersInputParams.UITextBoxOp1EditText;

            // Щелкните "Form1" клиент
            Mouse.Click(uIForm1Client, new Point(141, 78));

            // Тип "b" в "textBoxOp2" надпись
            uITextBoxOp2Edit.Text = this.LettersInputParams.UITextBoxOp2EditText;

            // Тип "{Tab}" в "textBoxOp2" надпись
            Keyboard.SendKeys(uITextBoxOp2Edit, this.LettersInputParams.UITextBoxOp2EditSendKeys, ModifierKeys.None);

            // Тип "{Enter}" в "/" кнопка
            Keyboard.SendKeys(uIItemButton, this.LettersInputParams.UIItemButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// LettersInputOutputTest - Используйте "LettersInputOutputTestExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void LettersInputOutputTest()
        {
            #region Variable Declarations
            WinWindow uIВходнаястрокаимеланеWindow = this.UIForm1Window.UIForm1Client.UIВходнаястрокаимеланеWindow;
            #endregion

            // Убедитесь, что свойство Name "Входная строка имела неверный формат." окно равняется "Входная строка имела неверный формат."
            Assert.AreEqual(this.LettersInputOutputTestExpectedValues.UIВходнаястрокаимеланеWindowName, uIВходнаястрокаимеланеWindow.Name, "Неверно выведено сообщение об ошибке");
        }
        
        /// <summary>
        /// ZeroDivisionTest - Используйте "ZeroDivisionTestParams" для передачи параметров в этот метод.
        /// </summary>
        public void ZeroDivisionTest()
        {
            #region Variable Declarations
            WinEdit uITextBoxOp1Edit = this.UIForm1Window.UITextBoxOp1Window.UITextBoxOp1Edit;
            WinEdit uITextBoxOp2Edit = this.UIForm1Window.UITextBoxOp2Window.UITextBoxOp2Edit;
            WinButton uIItemButton = this.UIForm1Window.UIItemWindow1.UIItemButton;
            #endregion

            // Тип "-1" в "textBoxOp1" надпись
            uITextBoxOp1Edit.Text = this.ZeroDivisionTestParams.UITextBoxOp1EditText;

            // Тип "0" в "textBoxOp2" надпись
            uITextBoxOp2Edit.Text = this.ZeroDivisionTestParams.UITextBoxOp2EditText;

            // Тип "{Tab}" в "textBoxOp2" надпись
            Keyboard.SendKeys(uITextBoxOp2Edit, this.ZeroDivisionTestParams.UITextBoxOp2EditSendKeys, ModifierKeys.None);

            // Тип "{Enter}" в "/" кнопка
            Keyboard.SendKeys(uIItemButton, this.ZeroDivisionTestParams.UIItemButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// ZeroDivisionOutputTest - Используйте "ZeroDivisionOutputTestExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void ZeroDivisionOutputTest()
        {
            #region Variable Declarations
            WinWindow uIItemWindow = this.UIForm1Window.UIForm1Client.UIItemWindow;
            #endregion

            // Убедитесь, что свойство Name "-∞" окно равняется "-∞"
            Assert.AreEqual(this.ZeroDivisionOutputTestExpectedValues.UIItemWindowName, uIItemWindow.Name, "Неверный вывод минус бесконечности");
        }
        
        /// <summary>
        /// StandartOutputTest - Используйте "StandartOutputTestExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void StandartOutputTest()
        {
            #region Variable Declarations
            WinWindow uIItem066666666666667Window = this.UIForm1Window.UIForm1Client.UIItem066666666666667Window;
            #endregion

            // Убедитесь, что свойство Name "0,66666666666667" окно равняется "0,66666666666667"
            Assert.AreEqual(this.StandartOutputTestExpectedValues.UIItem066666666666667WindowName, uIItem066666666666667Window.Name);
        }
        
        #region Properties
        public virtual StandartParams StandartParams
        {
            get
            {
                if ((this.mStandartParams == null))
                {
                    this.mStandartParams = new StandartParams();
                }
                return this.mStandartParams;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual LettersInputParams LettersInputParams
        {
            get
            {
                if ((this.mLettersInputParams == null))
                {
                    this.mLettersInputParams = new LettersInputParams();
                }
                return this.mLettersInputParams;
            }
        }
        
        public virtual LettersInputOutputTestExpectedValues LettersInputOutputTestExpectedValues
        {
            get
            {
                if ((this.mLettersInputOutputTestExpectedValues == null))
                {
                    this.mLettersInputOutputTestExpectedValues = new LettersInputOutputTestExpectedValues();
                }
                return this.mLettersInputOutputTestExpectedValues;
            }
        }
        
        public virtual ZeroDivisionTestParams ZeroDivisionTestParams
        {
            get
            {
                if ((this.mZeroDivisionTestParams == null))
                {
                    this.mZeroDivisionTestParams = new ZeroDivisionTestParams();
                }
                return this.mZeroDivisionTestParams;
            }
        }
        
        public virtual ZeroDivisionOutputTestExpectedValues ZeroDivisionOutputTestExpectedValues
        {
            get
            {
                if ((this.mZeroDivisionOutputTestExpectedValues == null))
                {
                    this.mZeroDivisionOutputTestExpectedValues = new ZeroDivisionOutputTestExpectedValues();
                }
                return this.mZeroDivisionOutputTestExpectedValues;
            }
        }
        
        public virtual StandartOutputTestExpectedValues StandartOutputTestExpectedValues
        {
            get
            {
                if ((this.mStandartOutputTestExpectedValues == null))
                {
                    this.mStandartOutputTestExpectedValues = new StandartOutputTestExpectedValues();
                }
                return this.mStandartOutputTestExpectedValues;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        #endregion
        
        #region Fields
        private StandartParams mStandartParams;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private LettersInputParams mLettersInputParams;
        
        private LettersInputOutputTestExpectedValues mLettersInputOutputTestExpectedValues;
        
        private ZeroDivisionTestParams mZeroDivisionTestParams;
        
        private ZeroDivisionOutputTestExpectedValues mZeroDivisionOutputTestExpectedValues;
        
        private StandartOutputTestExpectedValues mStandartOutputTestExpectedValues;
        
        private UIForm1Window mUIForm1Window;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "Standart"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class StandartParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "2" в "textBoxOp1" надпись
        /// </summary>
        public string UITextBoxOp1EditText = "2";
        
        /// <summary>
        /// Тип "3" в "textBoxOp2" надпись
        /// </summary>
        public string UITextBoxOp2EditText = "3";
        
        /// <summary>
        /// Тип "{Tab}" в "textBoxOp2" надпись
        /// </summary>
        public string UITextBoxOp2EditSendKeys = "{Tab}";
        
        /// <summary>
        /// Тип "{Enter}" в "/" кнопка
        /// </summary>
        public string UIItemButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethod1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Name "5" окно равняется "5"
        /// </summary>
        public string UIItem5WindowName = "5";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "LettersInput"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LettersInputParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "a" в "textBoxOp1" надпись
        /// </summary>
        public string UITextBoxOp1EditText = "a";
        
        /// <summary>
        /// Тип "b" в "textBoxOp2" надпись
        /// </summary>
        public string UITextBoxOp2EditText = "b";
        
        /// <summary>
        /// Тип "{Tab}" в "textBoxOp2" надпись
        /// </summary>
        public string UITextBoxOp2EditSendKeys = "{Tab}";
        
        /// <summary>
        /// Тип "{Enter}" в "/" кнопка
        /// </summary>
        public string UIItemButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "LettersInputOutputTest"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class LettersInputOutputTestExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Name "Входная строка имела неверный формат." окно равняется "Входная строка имела неверный формат."
        /// </summary>
        public string UIВходнаястрокаимеланеWindowName = "Входная строка имела неверный формат.";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "ZeroDivisionTest"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ZeroDivisionTestParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "-1" в "textBoxOp1" надпись
        /// </summary>
        public string UITextBoxOp1EditText = "-1";
        
        /// <summary>
        /// Тип "0" в "textBoxOp2" надпись
        /// </summary>
        public string UITextBoxOp2EditText = "0";
        
        /// <summary>
        /// Тип "{Tab}" в "textBoxOp2" надпись
        /// </summary>
        public string UITextBoxOp2EditSendKeys = "{Tab}";
        
        /// <summary>
        /// Тип "{Enter}" в "/" кнопка
        /// </summary>
        public string UIItemButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "ZeroDivisionOutputTest"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class ZeroDivisionOutputTestExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Name "-∞" окно равняется "-∞"
        /// </summary>
        public string UIItemWindowName = "-∞";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "StandartOutputTest"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class StandartOutputTestExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Name "0,66666666666667" окно равняется "0,66666666666667"
        /// </summary>
        public string UIItem066666666666667WindowName = "0,66666666666667";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UITextBoxOp1Window UITextBoxOp1Window
        {
            get
            {
                if ((this.mUITextBoxOp1Window == null))
                {
                    this.mUITextBoxOp1Window = new UITextBoxOp1Window(this);
                }
                return this.mUITextBoxOp1Window;
            }
        }
        
        public UITextBoxOp2Window UITextBoxOp2Window
        {
            get
            {
                if ((this.mUITextBoxOp2Window == null))
                {
                    this.mUITextBoxOp2Window = new UITextBoxOp2Window(this);
                }
                return this.mUITextBoxOp2Window;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIForm1Client UIForm1Client
        {
            get
            {
                if ((this.mUIForm1Client == null))
                {
                    this.mUIForm1Client = new UIForm1Client(this);
                }
                return this.mUIForm1Client;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UITextBoxOp1Window mUITextBoxOp1Window;
        
        private UITextBoxOp2Window mUITextBoxOp2Window;
        
        private UIItemWindow mUIItemWindow;
        
        private UIForm1Client mUIForm1Client;
        
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxOp1Window : WinWindow
    {
        
        public UITextBoxOp1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxOp1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxOp1Edit
        {
            get
            {
                if ((this.mUITextBoxOp1Edit == null))
                {
                    this.mUITextBoxOp1Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxOp1Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxOp1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxOp1Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxOp2Window : WinWindow
    {
        
        public UITextBoxOp2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxOp2";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxOp2Edit
        {
            get
            {
                if ((this.mUITextBoxOp2Edit == null))
                {
                    this.mUITextBoxOp2Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxOp2Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxOp2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxOp2Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonSum";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "+";
                    this.mUIItemButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIForm1Client : WinClient
    {
        
        public UIForm1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinControl.PropertyNames.Name] = "Form1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItem5Window
        {
            get
            {
                if ((this.mUIItem5Window == null))
                {
                    this.mUIItem5Window = new WinWindow(this);
                    #region Условия поиска
                    this.mUIItem5Window.SearchProperties[WinWindow.PropertyNames.Name] = "5";
                    this.mUIItem5Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIItem5Window.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIItem5Window;
            }
        }
        
        public WinWindow UIВходнаястрокаимеланеWindow
        {
            get
            {
                if ((this.mUIВходнаястрокаимеланеWindow == null))
                {
                    this.mUIВходнаястрокаимеланеWindow = new WinWindow(this);
                    #region Условия поиска
                    this.mUIВходнаястрокаимеланеWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Входная строка имела неверный формат.";
                    this.mUIВходнаястрокаимеланеWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIВходнаястрокаимеланеWindow.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIВходнаястрокаимеланеWindow;
            }
        }
        
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Условия поиска
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.Name] = "-∞";
                    this.mUIItemWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIItemWindow.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        
        public WinWindow UITextBoxOp1Window
        {
            get
            {
                if ((this.mUITextBoxOp1Window == null))
                {
                    this.mUITextBoxOp1Window = new WinWindow(this);
                    #region Условия поиска
                    this.mUITextBoxOp1Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITextBoxOp1Window.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
                    this.mUITextBoxOp1Window.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxOp1Window;
            }
        }
        
        public WinWindow UIItem066666666666667Window
        {
            get
            {
                if ((this.mUIItem066666666666667Window == null))
                {
                    this.mUIItem066666666666667Window = new WinWindow(this);
                    #region Условия поиска
                    this.mUIItem066666666666667Window.SearchProperties[WinWindow.PropertyNames.Name] = "0,66666666666667";
                    this.mUIItem066666666666667Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIItem066666666666667Window.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIItem066666666666667Window;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItem5Window;
        
        private WinWindow mUIВходнаястрокаимеланеWindow;
        
        private WinWindow mUIItemWindow;
        
        private WinWindow mUITextBoxOp1Window;
        
        private WinWindow mUIItem066666666666667Window;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonDivide";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "/";
                    this.mUIItemButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
}
